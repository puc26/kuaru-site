---
import Container from "../components/shared/Container.astro";
import Navitem from "../components/shared/Navitem.astro";
import BtnLink from "../components/shared/BtnLink.astro";
import { Image } from "astro:assets";
import kuaruLogo from "../assets/logos/kuaru-logo-2.png";

const navItems = [
  {
    href: "#about",
    text: "ABOUT",
  },
  {
    href: "#brands",
    text: "BRANDS",
  },
  {
    href: "#philosophy",
    text: "PHILOSOPHY",
  },
  {
    href: "#footer",
    text: "CONTACT",
  },
];
---

<header class="fixed inset-x-0 top-0 z-50 py-1 bg-transparent transition-colors duration-300 shadow-lg shadow-black/10" id="header">
  <Container>
    <nav class="w-full flex justify-between items-center gap-6 relative">
      <!-- logo -->
      <div class="min-w-max inline-flex relative lg:w-1/4">
        <a href="#hero-section" class="relative flex items-center gap-3 pointer-events-none" id="logo-link">
          <div class="flex items-center gap-4">
            <Image
              src={kuaruLogo}
              alt="KUARU STUDIO Logo"
              class="h-10 w-auto opacity-0 transition-opacity duration-300"
              id="logo-image"
            />
            <div class="font-bold text-3xl leading-none font-work-sans text-transparent select-none transition-colors duration-300" id="logo-text">
              KUARU STUDIOS
            </div>
          </div>
        </a>
      </div>

      <!-- navigation menu -->
      <div
        data-navbar
        class="flex h-0 overflow-hidden lg:!h-auto lg:scale-y-100 duration-300 ease-linear flex-col gap-y-6 gap-x-4 lg:flex-row w-full lg:w-2/4 lg:justify-center lg:items-center fixed lg:static top-[48px] lg:top-0 inset-x-0 lg:inset-x-auto bg-transparent backdrop-blur-none lg:bg-transparent border-x border-x-[#f4f4f4] lg:border-x-0 transition-all duration-300"
      >
        <ul
          class="border-t border-[#f4f4f4] lg:border-t-0 px-6 lg:px-0 pt-6 lg:pt-0 flex flex-col lg:flex-row gap-y-4 gap-x-3 text-lg text-[#f4f4f4] w-full lg:w-auto lg:justify-center lg:items-center transition-colors duration-300 font-['Zen_Kaku_Gothic_New',sans-serif]"
        >
          {
            navItems.map((item, index) => {
              return <Navitem {...item} isLast={index === navItems.length - 1} />;
            })
          }
        </ul>
      </div>

      <!-- hamburger menu button -->
      <div class="min-w-max flex items-center gap-x-3 lg:w-1/4 lg:justify-end">
        <button
          data-toggle-nav
          data-open-nav="false"
          class="lg:hidden lg:invisible outline-none w-7 h-auto flex flex-col relative"
        >
          <span
            id="line1"
            class="w-6 h-0.5 rounded-full bg-[#2C2C2C] transition-all duration-300 ease-linear"
          ></span>
          <span
            id="line2"
            class="w-6 origin-center mt-1 h-0.5 rounded-ful bg-[#2C2C2C] transition-all duration-300 ease-linear"
          ></span>
          <span
            id="line3"
            class="w-6 mt-1 h-0.5 rounded-ful bg-[#2C2C2C] transition-all duration-300 ease-linear"
          ></span>
          <span class="sr-only">togglenav</span>
        </button>
      </div>
    </nav>
  </Container>
</header>

<script>
  const toggleNav = document.querySelector('[data-toggle-nav]');
  const navbar = document.querySelector('[data-navbar]');
  const header = document.getElementById('header');
  const logoText = document.getElementById('logo-text');
  const logoLink = document.getElementById('logo-link');
  const logoImage = document.getElementById('logo-image');
  let timeoutId: number | null = null;
  let isPrivacyPage = false;

  // 监听隐私政策页面状态变化
  window.addEventListener('privacyPageStateChange', (e: CustomEvent) => {
    isPrivacyPage = e.detail.isPrivacyPage;
    if (isPrivacyPage) {
      // 在隐私政策页面时强制显示 header 和 logo
      if (header) {
        header.classList.add('bg-[#4c5c68]');
        header.classList.remove('bg-transparent');
      }
      if (logoText) {
        logoText.classList.remove('text-transparent');
        logoText.classList.add('text-[#f4f4f4]');
      }
      if (logoImage) {
        logoImage.classList.remove('opacity-0');
        logoImage.classList.add('opacity-100');
      }
      if (logoLink) {
        logoLink.classList.remove('pointer-events-none');
      }
    } else {
      // 返回主页时恢复滚动效果
      handleScroll();
    }
  });

  if (toggleNav && navbar) {
    // Toggle menu button click
    toggleNav.addEventListener('click', () => {
      const isOpen = toggleNav.getAttribute('data-open-nav') === 'true';
      toggleNav.setAttribute('data-open-nav', (!isOpen).toString());
      navbar.style.height = isOpen ? '0' : `${navbar.scrollHeight}px`;
    });

    // Mouse enter menu
    navbar.addEventListener('mouseenter', () => {
      if (timeoutId) {
        clearTimeout(timeoutId);
        timeoutId = null;
      }
    });

    // Mouse leave menu
    navbar.addEventListener('mouseleave', () => {
      timeoutId = window.setTimeout(() => {
        toggleNav.setAttribute('data-open-nav', 'false');
        navbar.style.height = '0';
      }, 100); // Delay before menu closes (in milliseconds)
    });
  }

  // 处理滚动效果
  function handleScroll() {
    if (window.scrollY > 50) {
      header.classList.add('bg-[#4c5c68]');
      header.classList.remove('bg-transparent');
      // Update logo text color
      if (logoText) {
        logoText.classList.remove('text-transparent');
        logoText.classList.add('text-[#f4f4f4]');
      }
      // Show logo image
      if (logoImage) {
        logoImage.classList.remove('opacity-0');
        logoImage.classList.add('opacity-100');
      }
      // Enable logo link clicks
      if (logoLink) {
        logoLink.classList.remove('pointer-events-none');
      }
    } else {
      header.classList.remove('bg-[#4c5c68]');
      header.classList.add('bg-transparent');
      // Restore logo text color
      if (logoText) {
        logoText.classList.remove('text-[#f4f4f4]');
        logoText.classList.add('text-transparent');
      }
      // Hide logo image
      if (logoImage) {
        logoImage.classList.remove('opacity-100');
        logoImage.classList.add('opacity-0');
      }
      // Disable logo link clicks
      if (logoLink) {
        logoLink.classList.add('pointer-events-none');
      }
    }
  }

  // Scroll event listener
  if (header) {
    window.addEventListener('scroll', () => {
      if (!isPrivacyPage) {
        handleScroll();
      }
    });
  }
</script>
